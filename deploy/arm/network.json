{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "allowedExternalEndpoints": {
      "type": "array",
      "defaultValue": []
    },
    "mode": {
      "type": "string",
      "defaultValue": "production",
      "allowedValues": [
        "development",
        "production"
      ]
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "monitoringEventHub": {
      "type": "string"
    },
    "monitoringEventHubsNamespace": {
      "type": "string"
    }
  },
  "variables": {
    "defaultTags": {
      "vnetExists": false
    },
    "updatedTags": {
      "vnetExists": true
    },
    "vnetExists": "[bool(union(variables('defaultTags'), resourceGroup().tags)['vnetExists'])]",
    "vnetAddressPrefix": "10.0.0.0/16",
    "privateLinkSubnetPrefix": "10.0.0.0/24",
    "defaultFirewallApplicationRules": [
      {
        "name": "aks-required",
        "sourceAddresses": [ "*" ],
        "targetFqdns": [
          "mcr.microsoft.com",
          "*.cdn.mscr.io",
          "*.data.mcr.microsoft.com",
          "management.azure.com",
          "login.microsoftonline.com",
          "packages.microsoft.com",
          "acs-mirror.azureedge.net"
        ],
        "protocols": [
          {
            "port": 443,
            "protocolType": "Https"
          }
        ]
      },
      {
        "name": "ubuntu-updates",
        "sourceAddresses": [ "*" ],
        "targetFqdns": [
          "security.ubuntu.com",
          "azure.archive.ubuntu.com",
          "changelogs.ubuntu.com"
        ],
        "protocols": [
          {
            "port": 80,
            "protocolType": "Http"
          }
        ]
      },
      {
        "name": "app-insights-telemetry",
        "sourceAddresses": [ "*" ],
        "targetFqdns": [
          "dc.applicationinsights.azure.com",
          "dc.services.visualstudio.com"
        ],
        "protocols": [
          {
            "port": 443,
            "protocolType": "Https"
          }
        ]
      },
      {
        "name": "aad-pod-identity",
        "sourceAddresses": ["*"],
        "targetFqdns": [
          "management.azure.com"
        ],
        "protocols": [
          {
            "port": 443,
            "protocolType": "Https"
          }
        ]
      }
    ],
    "devFirewallApplicationRules": [
      {
        "name": "dev-docker-hub",
        "sourceAddresses": [ "*" ],
        "targetFqdns": [
          "*.docker.io",
          "*.docker.com"
        ],
        "protocols": [
          {
            "port": 443,
            "protocolType": "Https"
          }
        ]
      }
    ],
    "benchmarkFirewallApplicationRules": [
      {
        "name": "benchmark",
        "sourceAddresses": [ "*" ],
        "targetFqdns": "[parameters('allowedExternalEndpoints')]",
        "protocols": [
          {
            "port": 443,
            "protocolType": "Https"
          }
        ]
      }
    ],
    "baseFirewallApplicationRules": "[if(equals(parameters('mode'), 'development'), union(variables('defaultFirewallApplicationRules'), variables('devFirewallApplicationRules')), variables('defaultFirewallApplicationRules'))]",
    "firewallApplicationRules": "[union(variables('baseFirewallApplicationRules'), variables('benchmarkFirewallApplicationRules'))]",
    "firewallSubnetPrefix": "10.0.1.0/26",
    "detonationChamberSubnetPrefix": "10.0.3.0/24",
    "detonationChamber": "detonationChamber",
    "firewall": "firewall",
    "privateDnsZones": [
      "privatelink.file.core.windows.net",
      "privatelink.queue.core.windows.net",
      "privatelink.azurecr.io"
    ],
    "privateLink": "privateLink",
    "vnet": "vnet"
  },
  "resources": [
    {
      "condition": "[not(variables('vnetExists'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('vnet')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Resources/tags",
      "apiVersion": "2019-10-01",
      "name": "default",
      "properties": {
        "tags": "[union(resourceGroup().tags, variables('updatedTags'))]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('privateLink')]",
      "properties": {
        "securityRules": [
          {
            "name": "all-inbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Inbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "detonationChamber-inbound-allow",
            "properties": {
              "priority": 1000,
              "direction": "Inbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('privateLinkSubnetPrefix')]",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "all-outbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Outbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          }
        ]
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateLink'))]"
          ],
          "type": "providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat('Microsoft.Insights/diagnostics')]",
          "properties": {
            "eventHubName": "[parameters('monitoringEventHub')]",
            "eventHubAuthorizationRuleId": "[resourceId('Microsoft.EventHub/namespaces/authorizationrules', parameters('monitoringEventHubsNamespace'), 'RootManageSharedAccessKey')]",
            "logs": [
              {
                "category": "NetworkSecurityGroupEvent",
                "enabled": true,
                "retentionPolicy": {
                  "days": 365,
                  "enabled": true
                }
              },
              {
                "category": "NetworkSecurityGroupRuleCounter",
                "enabled": true,
                "retentionPolicy": {
                  "days": 365,
                  "enabled": true
                }
              }
            ]
          }
        }
      ]
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateLink'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vnet'), '/', variables('privateLink'))]",
      "properties": {
        "addressPrefix": "[variables('privateLinkSubnetPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateLink'))]"
        },
        "privateEndpointNetworkPolicies": "Disabled"
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vnet'), '/AzureFirewallSubnet')]",
      "properties": {
        "addressPrefix": "[variables('firewallSubnetPrefix')]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('detonationChamber')]",
      "properties": {
        "securityRules": [
          {
            "name": "intra-subnet-inbound-allow",
            "description": "Allow k8s apiserver->node communication",
            "properties": {
              "priority": 1000,
              "direction": "Inbound",
              "access": "Allow",
              "protocol": "*",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "all-inbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Inbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "intra-subnet-outbound-allow",
            "description": "Allow k8s apiserver->node communication",
            "properties": {
              "priority": 1000,
              "direction": "Outbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "destinationPortRange": "*"
            }
          },
          // {
          //   "name": "private-endpoints-outbound-allow",
          //   "properties": {
          //     "priority": 1100,
          //     "direction": "Outbound",
          //     "access": "Allow",
          //     "protocol": "TCP",
          //     "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
          //     "sourcePortRange": "*",
          //     "destinationAddressPrefix": "[variables('privateLinkSubnetPrefix')]",
          //     "destinationPortRange": "443"
          //   }
          // },
          // {
          //   "name": "firewall-outbound-allow",
          //   "properties": {
          //     "priority": 1200,
          //     "direction": "Outbound",
          //     "access": "Allow",
          //     "protocol": "TCP",
          //     "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
          //     "sourcePortRange": "*",
          //     "destinationAddressPrefix": "[variables('firewallSubnetPrefix')]",
          //     "destinationPortRange": "*"
          //   }
          // },
          // {
          //   "name": "allow-internet-via-firewall",
          //   "properties": {
          //     "priority": 1300,
          //     "direction": "Outbound",
          //     "access": "Allow",
          //     "protocol": "TCP",
          //     "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
          //     "sourcePortRange": "*",
          //     "destinationAddressPrefix": "Internet",
          //     "destinationPortRange": "*"
          //   }
          // },
          // {
          //   "name": "dns-outbound-allow",
          //   "properties": {
          //     "priority": 1400,
          //     "direction": "Outbound",
          //     "access": "Allow",
          //     "protocol": "UDP",
          //     "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
          //     "sourcePortRange": "*",
          //     "destinationAddressPrefix": "*",
          //     "destinationPortRange": "53"
          //   }
          // },
          {
            "name": "all-outbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Outbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          }
        ]
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('detonationChamber'))]",
        "[resourceId('Microsoft.Network/routeTables', variables('firewall'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vnet'), '/', variables('detonationChamber'))]",
      "properties": {
        "addressPrefix": "[variables('detonationChamberSubnetPrefix')]",
        "privateEndpointNetworkPolicies": "Disabled",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('detonationChamber'))]"

        },
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('firewall'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('firewall')]",
      "sku": {
        "name": "Standard"
      },
      "tags": "[parameters('tags')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('firewall'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('firewall')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "egress",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), 'AzureFirewallSubnet')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('firewall'))]"
              }
            }
          }
        ],
        "applicationRuleCollections": [
          {
            "name": "sds",
            "properties": {
              "action": {
                "type": "Allow"
              },
              "priority": 100,
              "rules": "[variables('firewallApplicationRules')]"
            }
          }
        ],
        "networkRuleCollections": [
          {
            "name": "sds",
            "properties": {
              "action": {
                "type": "Allow"
              },
              "priority": 100,
              "rules": [
                {
                  "name": "ubuntu-ntp",
                  "sourceAddresses": [ "*" ],
                  "destinationFqdns": [ "ntp.ubuntu.com" ],
                  "destinationPorts": [ "123" ],
                  "protocols": [ "UDP" ]
                },
                {
                  "name": "privateEndpoints",
                  "sourceAddresses": [
                    "[variables('detonationChamberSubnetPrefix')]"
                  ],
                  "destinationAddresses": [
                    "[variables('privateLinkSubnetPrefix')]"
                  ],
                  "destinationPorts": [ "443" ],
                  "protocols": [ "TCP" ]
                }
              ]
            }
          }
        ],
        "additionalProperties": {
          "Network.DNS.EnableProxy": true
        }
      }F
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', variables('firewall'))]"
      ],
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('firewall')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', variables('firewall'))).ipConfigurations[0].properties.privateIPAddress]"
            }
          },
          {
            "name": "internet",
            "properties": {
              "addressPrefix": "[concat(reference(resourceId('Microsoft.Network/publicIPAddresses', variables('firewall'))).ipAddress, '/32')]",
              "nextHopType": "Internet"
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "privateDnsZones",
        "count": "[length(variables('privateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "location": "global",
      "name": "[variables('privateDnsZones')[copyIndex()]]",
      "tags": "[parameters('tags')]",
      "properties": {
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[copyIndex()])]"
          ],
          "type": "SOA",
          "apiVersion": "2018-09-01",
          "name": "@",
          "properties": {
            "ttl": 3600,
            "soaRecord": {
              "email": "azureprivatedns-host.microsoft.com",
              "expireTime": 2419200,
              "host": "azureprivatedns.net",
              "refreshTime": 3600,
              "retryTime": 300,
              "serialNumber": 1,
              "minimumTtl": 300
            }
          }
        },
        {
          "dependsOn": [
            "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[copyIndex()])]"
          ],
          "type": "virtualNetworkLinks",
          "apiVersion": "2018-09-01",
          "location": "global",
          "name": "privatedns",
          "properties": {
            "registrationEnabled": false,
            "virtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]",
              "resourceGroup": "[resourceGroup().name]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "acrPrivateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
    },
    "detonationChamberSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), variables('detonationChamber'))]"
    },
    "filePrivateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
    },
    "privateLinkSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), variables('privateLink'))]"
    },
    "queuePrivateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.queue.core.windows.net')]"
    },
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
    }
  }
}
